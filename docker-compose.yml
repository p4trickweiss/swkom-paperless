version: "3.8"

services:

  paperlessdb:
    container_name: paperless-db
    image: postgres:latest
    environment:
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
      POSTGRES_DB: paperless
    ports:
      - "5432:5432"
    volumes:
      - db-storage:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    container_name: paperless-rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "9093:15672"
    volumes:
      - rabbitmq-storage:/var/lib/rabbitmq/
    configs:
      - source: rabbitmq-config
        target: /etc/rabbitmq/rabbitmq.conf

  minio:
    container_name: paperless-minio
    image: minio/minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin-password
    command: server /data --console-address ":9090"
    ports:
      - "9000:9000"
      - "9090:9090"
    volumes:
      - minio-storage:/data

  paperless-rest:
    container_name: paperless-rest
    build:
      context: ./apps/paperless-rest
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      paperlessdb:
          condition: service_healthy

  paperless-ui:
    container_name: paperless-ui
    build:
      context: ./apps/paperless-ui
      dockerfile: Dockerfile
    ports:
      - "8080:80"
    configs:
      - source: nginx-config
        target: /etc/nginx/conf.d/default.conf

configs:
  nginx-config:
    file: config/nginx/nginx.conf
  rabbitmq-config:
    file: config/rabbitmq/rabbitmq-env.conf

volumes:
  db-storage: {}
  minio-storage: {}
  rabbitmq-storage: {}
